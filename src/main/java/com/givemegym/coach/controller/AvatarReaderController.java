package com.givemegym.coach.controller;

import java.io.IOException;
import java.util.Base64;

import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.givemegym.coach.service.CoachServiceImpl;

@Controller
@RequestMapping("/coachlist")
public class AvatarReaderController {
	
	@Autowired
	CoachServiceImpl theCoachService;

	@GetMapping("avatar")
	public void imageReader(@RequestParam("coachId") int coachId,
			HttpServletRequest req, HttpServletResponse res)
			throws IOException {
		res.setContentType("image/jpg");
		ServletOutputStream out = res.getOutputStream();

		try {
			out.write(theCoachService.findById(coachId).getCoachPic());
		} catch (Exception ex) {
			byte[] noPics = Base64.getDecoder().decode(
					"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");
			out.write(noPics);
		}
	}
}
